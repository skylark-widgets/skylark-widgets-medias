{"version":3,"sources":["media.js"],"names":["define","Widget","medias","Media","inherit","_construct","parent","type","prototype","call","this","media","document","createElement","_elm","appendChild","setVolume","volume","setValue","video","src","data","setURL","value","setTime","time","currentTime","setAutoplay","autoplay","isPlaying","paused","setLoop","loop","setPlaybackRate","playbackRate","play","stop","pause","_updateSize","style","width","size","x","height","y"],"mappings":";;;;;;;AAAAA,QACC,8BACA,YACC,SAASC,EAAOC,GACjB,aAYA,IAAIC,EAAQF,EAAOG,SAElBC,WAAa,SAAUC,EAAQC,GAC9BN,EAAOO,UAAUH,WAAWI,KAAKC,KAAMJ,EAAQ,OAG/CI,KAAKC,MAAQC,SAASC,cAAcN,GACpCG,KAAKI,KAAKC,YAAYL,KAAKC,QAU5BK,UAAY,SAASC,GACpBP,KAAKC,MAAMM,OAASA,GASrBC,SAAW,SAASC,GACnBT,KAAKC,MAAMS,IAAMD,EAAME,MASxBC,OAAS,SAASC,GACjBb,KAAKC,MAAMS,IAAMG,GASlBC,QAAU,SAASC,GAClBf,KAAKC,MAAMe,YAAcD,GAS1BE,YAAc,SAASJ,GACtBb,KAAKC,MAAMiB,SAAWL,GASvBM,UAAY,SAASN,GACpB,OAAQb,KAAKC,MAAMmB,QASpBC,QAAU,SAASR,GAClBb,KAAKC,MAAMqB,KAAOT,GASnBU,gBAAkB,SAASC,GAC1BxB,KAAKC,MAAMuB,aAAeA,GAQ3BC,KAAO,WACNzB,KAAKC,MAAMwB,QAQZC,KAAO,WACN1B,KAAKC,MAAMe,YAAc,EACzBhB,KAAKC,MAAM0B,SAQZA,MAAQ,WACP3B,KAAKC,MAAM0B,SAGZC,YAAc,WACbrC,EAAOO,UAAU8B,YAAY7B,KAAKC,MAElCA,KAAKC,MAAM4B,MAAMC,MAAQ9B,KAAK+B,KAAKC,EAAI,KACvChC,KAAKC,MAAM4B,MAAMI,OAASjC,KAAK+B,KAAKG,EAAI,QAK1C,OAAO1C,EAAOC,MAAQA","file":"../media.js","sourcesContent":["define([\n\t\"skylark-widgets-base/widget\",\n\t\"./medias\"\n],function(Widget,medias){\n\t\"use strict\";\n\n\t/**\n\t * Media element can be used to play media content.\n\t *\n\t * Should be used as a base for other multimedia elements like audio and video.\n\t *\n\t * @class Media\n\t * @extends {Widget}\n\t * @param {Widget} parent Parent element.\n\t */\n\n\tvar Media = Widget.inherit({\n\n\t\t_construct : function (parent, type){\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\n\n\t\t\t//Media\n\t\t\tthis.media = document.createElement(type);\n\t\t\tthis._elm.appendChild(this.media);\n\t\t},\n\n\n\t\t/**\n\t\t * Set element Media volume.\n\t\t * \n\t\t * @method setVolume\n\t\t * @param {Number} volume Volume level from 0 to 1.\n\t\t */\n\t\tsetVolume : function(volume) {\n\t\t\tthis.media.volume = volume;\t\n\t\t},\n\n\t\t/**\n\t\t * Set video to be played.\n\t\t *\n\t\t * @method setValue\n\t\t * @param {Video} value Video resource to play.\n\t\t */\n\t\tsetValue : function(video) {\n\t\t\tthis.media.src = video.data;\n\t\t},\n\n\t\t/**\n\t\t * Set URL of the media to play.\n\t\t *\n\t\t * @method setURL\n\t\t * @param {String} value Media url.\n\t\t */\n\t\tsetURL : function(value){\n\t\t\tthis.media.src = value;\n\t\t},\n\n\t\t/**\n\t\t * Set the playback time.\n\t\t *\n\t\t * @method setTime\n\t\t * @param {Number} time Time to be set.\n\t\t */\n\t\tsetTime : function(time) {\n\t\t\tthis.media.currentTime = time;\n\t\t},\n\n\t\t/**\n\t\t * Set autoplay mode.\n\t\t * \n\t\t * @method setAutoplay\n\t\t * @param {Boolean} value If true the media starts playing automatically.\n\t\t */\n\t\tsetAutoplay : function(value) {\n\t\t\tthis.media.autoplay = value;\n\t\t},\n\n\t\t/**\n\t\t * Check if the media is playing.\n\t\t * \n\t\t * @method isPlaying\n\t\t * @return {Boolean} True if the media is playing.\n\t\t */\n\t\tisPlaying : function(value) {\n\t\t\treturn !this.media.paused;\n\t\t},\n\n\t\t/**\n\t\t * Set loop mode.\n\t\t * \n\t\t * @method setLoop\n\t\t * @param {Boolean} value If true the media plays in loop.\n\t\t */\n\t\tsetLoop : function(value){\n\t\t\tthis.media.loop = value;\n\t\t},\n\n\t\t/**\n\t\t * Set playback rate.\n\t\t * \n\t\t * @method setPlaybackRate\n\t\t * @param {Number} setPlaybackRate The velocity of playback.\n\t\t */\n\t\tsetPlaybackRate : function(playbackRate) {\n\t\t\tthis.media.playbackRate = playbackRate;\n\t\t},\n\n\t\t/**\n\t\t * Play media playback.\n\t\t * \n\t\t * @method play\n\t\t */\n\t\tplay : function() {\n\t\t\tthis.media.play();\n\t\t},\n\n\t\t/**\n\t\t * Stop media playback.\n\t\t * \n\t\t * @method stop\n\t\t */\n\t\tstop : function(){\n\t\t\tthis.media.currentTime = 0;\n\t\t\tthis.media.pause();\n\t\t},\n\n\t\t/**\n\t\t * Pause media.\n\t\t * \n\t\t * @method pause\n\t\t */\n\t\tpause : function(){\n\t\t\tthis.media.pause();\n\t\t},\n\n\t\t_updateSize : function() {\n\t\t\tWidget.prototype._updateSize.call(this);\n\n\t\t\tthis.media.style.width = this.size.x + \"px\";\n\t\t\tthis.media.style.height = this.size.y + \"px\";\n\t\t}\n\t});\n\n\n\treturn medias.Media = Media;\n});"]}